-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from ParLatte.y
-----------------------------------------------------------------------------

state 150 contains 1 shift/reduce conflicts.

rule 46 is unused
rule 47 is unused
rule 48 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListDef                                 (4)
	Def -> Type Ident '(' ListArg ')' Block            (5)
	Def -> 'class' Ident Extend '{' ListFeature '}'    (6)
	ListDef -> Def                                     (7)
	ListDef -> Def ListDef                             (8)
	Arg -> Type Ident                                  (9)
	ListArg ->                                         (10)
	ListArg -> Arg                                     (11)
	ListArg -> Arg ',' ListArg                         (12)
	Extend ->                                          (13)
	Extend -> 'extends' Ident                          (14)
	Feature -> Type ListItem ';'                       (15)
	Feature -> Type Ident '(' ListArg ')' Block        (16)
	Feature -> ';'                                     (17)
	ListFeature ->                                     (18)
	ListFeature -> Feature ListFeature                 (19)
	Item -> Ident                                      (20)
	Item -> Ident '=' Expr                             (21)
	ListItem -> Item                                   (22)
	ListItem -> Item ',' ListItem                      (23)
	Block -> '{' ListStmt '}'                          (24)
	Stmt -> ';'                                        (25)
	Stmt -> Block                                      (26)
	Stmt -> Expr ';'                                   (27)
	Stmt -> Type ListItem ';'                          (28)
	Stmt -> Expr '=' Expr ';'                          (29)
	Stmt -> Expr '++' ';'                              (30)
	Stmt -> Expr '--' ';'                              (31)
	Stmt -> 'return' Expr ';'                          (32)
	Stmt -> 'return' ';'                               (33)
	Stmt -> 'while' '(' Expr ')' Stmt                  (34)
	Stmt -> 'for' '(' Type Ident ':' Expr ')' Stmt     (35)
	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt         (36)
	Stmt -> 'if' '(' Expr ')' Stmt                     (37)
	ListStmt ->                                        (38)
	ListStmt -> Stmt ListStmt                          (39)
	Type -> 'int'                                      (40)
	Type -> 'string'                                   (41)
	Type -> 'boolean'                                  (42)
	Type -> 'void'                                     (43)
	Type -> Type '[]'                                  (44)
	Type -> Ident                                      (45)
	ListType ->                                        (46)
	ListType -> Type                                   (47)
	ListType -> Type ',' ListType                      (48)
	Expr8 -> Ident                                     (49)
	Expr8 -> Ident '(' ListExpr ')'                    (50)
	Expr8 -> Expr8 '[' Expr ']'                        (51)
	Expr8 -> '(' Expr ')'                              (52)
	Expr7 -> Expr7 '.' Expr8                           (53)
	Expr7 -> Expr8                                     (54)
	Expr6 -> Integer                                   (55)
	Expr6 -> 'true'                                    (56)
	Expr6 -> 'false'                                   (57)
	Expr6 -> 'null'                                    (58)
	Expr6 -> String                                    (59)
	Expr6 -> '(' Expr ')' Expr6                        (60)
	Expr6 -> 'new' Type '[' Expr ']'                   (61)
	Expr6 -> 'new' Ident                               (62)
	Expr6 -> Expr7                                     (63)
	Expr5 -> '-' Expr6                                 (64)
	Expr5 -> '!' Expr6                                 (65)
	Expr5 -> Expr6                                     (66)
	Expr4 -> Expr4 MulOp Expr5                         (67)
	Expr4 -> Expr5                                     (68)
	Expr3 -> Expr3 AddOp Expr4                         (69)
	Expr3 -> Expr4                                     (70)
	Expr2 -> Expr2 RelOp Expr3                         (71)
	Expr2 -> Expr3                                     (72)
	Expr1 -> Expr2 '&&' Expr1                          (73)
	Expr1 -> Expr2                                     (74)
	Expr -> Expr1 '||' Expr                            (75)
	Expr -> Expr1                                      (76)
	ListExpr ->                                        (77)
	ListExpr -> Expr                                   (78)
	ListExpr -> Expr ',' ListExpr                      (79)
	AddOp -> '+'                                       (80)
	AddOp -> '-'                                       (81)
	MulOp -> '*'                                       (82)
	MulOp -> '/'                                       (83)
	MulOp -> '%'                                       (84)
	RelOp -> '<'                                       (85)
	RelOp -> '<='                                      (86)
	RelOp -> '>'                                       (87)
	RelOp -> '>='                                      (88)
	RelOp -> '=='                                      (89)
	RelOp -> '!='                                      (90)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	'*'            { PT _ (TS _ 7) }
	'+'            { PT _ (TS _ 8) }
	'++'           { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'--'           { PT _ (TS _ 12) }
	'.'            { PT _ (TS _ 13) }
	'/'            { PT _ (TS _ 14) }
	':'            { PT _ (TS _ 15) }
	';'            { PT _ (TS _ 16) }
	'<'            { PT _ (TS _ 17) }
	'<='           { PT _ (TS _ 18) }
	'='            { PT _ (TS _ 19) }
	'=='           { PT _ (TS _ 20) }
	'>'            { PT _ (TS _ 21) }
	'>='           { PT _ (TS _ 22) }
	'['            { PT _ (TS _ 23) }
	'[]'           { PT _ (TS _ 24) }
	']'            { PT _ (TS _ 25) }
	'boolean'      { PT _ (TS _ 26) }
	'class'        { PT _ (TS _ 27) }
	'else'         { PT _ (TS _ 28) }
	'extends'      { PT _ (TS _ 29) }
	'false'        { PT _ (TS _ 30) }
	'for'          { PT _ (TS _ 31) }
	'if'           { PT _ (TS _ 32) }
	'int'          { PT _ (TS _ 33) }
	'new'          { PT _ (TS _ 34) }
	'null'         { PT _ (TS _ 35) }
	'return'       { PT _ (TS _ 36) }
	'string'       { PT _ (TS _ 37) }
	'true'         { PT _ (TS _ 38) }
	'void'         { PT _ (TS _ 39) }
	'while'        { PT _ (TS _ 40) }
	'{'            { PT _ (TS _ 41) }
	'||'           { PT _ (TS _ 42) }
	'}'            { PT _ (TS _ 43) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	Def             rules 5, 6
	ListDef         rules 7, 8
	Arg             rule  9
	ListArg         rules 10, 11, 12
	Extend          rules 13, 14
	Feature         rules 15, 16, 17
	ListFeature     rules 18, 19
	Item            rules 20, 21
	ListItem        rules 22, 23
	Block           rule  24
	Stmt            rules 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37
	ListStmt        rules 38, 39
	Type            rules 40, 41, 42, 43, 44, 45
	ListType        rules 46, 47, 48
	Expr8           rules 49, 50, 51, 52
	Expr7           rules 53, 54
	Expr6           rules 55, 56, 57, 58, 59, 60, 61, 62, 63
	Expr5           rules 64, 65, 66
	Expr4           rules 67, 68
	Expr3           rules 69, 70
	Expr2           rules 71, 72
	Expr1           rules 73, 74
	Expr            rules 75, 76
	ListExpr        rules 77, 78, 79
	AddOp           rules 80, 81
	MulOp           rules 82, 83, 84
	RelOp           rules 85, 86, 87, 88, 89, 90

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'boolean'      shift, and enter state 8
	'class'        shift, and enter state 9
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Program        goto state 4
	Def            goto state 5
	ListDef        goto state 6
	Type           goto state 7

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'.'            reduce using rule 1
	'/'            reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'['            reduce using rule 1
	'[]'           reduce using rule 1
	']'            reduce using rule 1
	'extends'      reduce using rule 1
	'{'            reduce using rule 1
	'||'           reduce using rule 1
	L_Ident        reduce using rule 1


State 3

	Type -> Ident .                                     (rule 45)

	'[]'           reduce using rule 45
	L_Ident        reduce using rule 45


State 4

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 5

	ListDef -> Def .                                    (rule 7)
	ListDef -> Def . ListDef                            (rule 8)

	'boolean'      shift, and enter state 8
	'class'        shift, and enter state 9
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2
	%eof           reduce using rule 7

	Ident          goto state 3
	Def            goto state 5
	ListDef        goto state 16
	Type           goto state 7

State 6

	Program -> ListDef .                                (rule 4)

	%eof           reduce using rule 4


State 7

	Def -> Type . Ident '(' ListArg ')' Block           (rule 5)
	Type -> Type . '[]'                                 (rule 44)

	'[]'           shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 14

State 8

	Type -> 'boolean' .                                 (rule 42)

	'['            reduce using rule 42
	'[]'           reduce using rule 42
	L_Ident        reduce using rule 42


State 9

	Def -> 'class' . Ident Extend '{' ListFeature '}'    (rule 6)

	L_Ident        shift, and enter state 2

	Ident          goto state 13

State 10

	Type -> 'int' .                                     (rule 40)

	'['            reduce using rule 40
	'[]'           reduce using rule 40
	L_Ident        reduce using rule 40


State 11

	Type -> 'string' .                                  (rule 41)

	'['            reduce using rule 41
	'[]'           reduce using rule 41
	L_Ident        reduce using rule 41


State 12

	Type -> 'void' .                                    (rule 43)

	'['            reduce using rule 43
	'[]'           reduce using rule 43
	L_Ident        reduce using rule 43


State 13

	Def -> 'class' Ident . Extend '{' ListFeature '}'    (rule 6)

	'extends'      shift, and enter state 19
	'{'            reduce using rule 13

	Extend         goto state 18

State 14

	Def -> Type Ident . '(' ListArg ')' Block           (rule 5)

	'('            shift, and enter state 17


State 15

	Type -> Type '[]' .                                 (rule 44)

	'['            reduce using rule 44
	'[]'           reduce using rule 44
	L_Ident        reduce using rule 44


State 16

	ListDef -> Def ListDef .                            (rule 8)

	%eof           reduce using rule 8


State 17

	Def -> Type Ident '(' . ListArg ')' Block           (rule 5)

	')'            reduce using rule 10
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 22
	ListArg        goto state 23
	Type           goto state 24

State 18

	Def -> 'class' Ident Extend . '{' ListFeature '}'    (rule 6)

	'{'            shift, and enter state 21


State 19

	Extend -> 'extends' . Ident                         (rule 14)

	L_Ident        shift, and enter state 2

	Ident          goto state 20

State 20

	Extend -> 'extends' Ident .                         (rule 14)

	'{'            reduce using rule 14


State 21

	Def -> 'class' Ident Extend '{' . ListFeature '}'    (rule 6)

	';'            shift, and enter state 31
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	'}'            reduce using rule 18
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Feature        goto state 28
	ListFeature    goto state 29
	Type           goto state 30

State 22

	ListArg -> Arg .                                    (rule 11)
	ListArg -> Arg . ',' ListArg                        (rule 12)

	')'            reduce using rule 11
	','            shift, and enter state 27


State 23

	Def -> Type Ident '(' ListArg . ')' Block           (rule 5)

	')'            shift, and enter state 26


State 24

	Arg -> Type . Ident                                 (rule 9)
	Type -> Type . '[]'                                 (rule 44)

	'[]'           shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 25

State 25

	Arg -> Type Ident .                                 (rule 9)

	')'            reduce using rule 9
	','            reduce using rule 9


State 26

	Def -> Type Ident '(' ListArg ')' . Block           (rule 5)

	'{'            shift, and enter state 39

	Block          goto state 38

State 27

	ListArg -> Arg ',' . ListArg                        (rule 12)

	')'            reduce using rule 10
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 22
	ListArg        goto state 37
	Type           goto state 24

State 28

	ListFeature -> Feature . ListFeature                (rule 19)

	';'            shift, and enter state 31
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	'}'            reduce using rule 18
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Feature        goto state 28
	ListFeature    goto state 36
	Type           goto state 30

State 29

	Def -> 'class' Ident Extend '{' ListFeature . '}'    (rule 6)

	'}'            shift, and enter state 35


State 30

	Feature -> Type . ListItem ';'                      (rule 15)
	Feature -> Type . Ident '(' ListArg ')' Block       (rule 16)
	Type -> Type . '[]'                                 (rule 44)

	'[]'           shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 32
	Item           goto state 33
	ListItem       goto state 34

State 31

	Feature -> ';' .                                    (rule 17)

	';'            reduce using rule 17
	'boolean'      reduce using rule 17
	'int'          reduce using rule 17
	'string'       reduce using rule 17
	'void'         reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17


State 32

	Feature -> Type Ident . '(' ListArg ')' Block       (rule 16)
	Item -> Ident .                                     (rule 20)
	Item -> Ident . '=' Expr                            (rule 21)

	'('            shift, and enter state 72
	','            reduce using rule 20
	';'            reduce using rule 20
	'='            shift, and enter state 73


State 33

	ListItem -> Item .                                  (rule 22)
	ListItem -> Item . ',' ListItem                     (rule 23)

	','            shift, and enter state 71
	';'            reduce using rule 22


State 34

	Feature -> Type ListItem . ';'                      (rule 15)

	';'            shift, and enter state 70


State 35

	Def -> 'class' Ident Extend '{' ListFeature '}' .    (rule 6)

	'boolean'      reduce using rule 6
	'class'        reduce using rule 6
	'int'          reduce using rule 6
	'string'       reduce using rule 6
	'void'         reduce using rule 6
	L_Ident        reduce using rule 6
	%eof           reduce using rule 6


State 36

	ListFeature -> Feature ListFeature .                (rule 19)

	'}'            reduce using rule 19


State 37

	ListArg -> Arg ',' ListArg .                        (rule 12)

	')'            reduce using rule 12


State 38

	Def -> Type Ident '(' ListArg ')' Block .           (rule 5)

	'boolean'      reduce using rule 5
	'class'        reduce using rule 5
	'int'          reduce using rule 5
	'string'       reduce using rule 5
	'void'         reduce using rule 5
	L_Ident        reduce using rule 5
	%eof           reduce using rule 5


State 39

	Block -> '{' . ListStmt '}'                         (rule 24)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	';'            shift, and enter state 59
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 60
	'for'          shift, and enter state 61
	'if'           shift, and enter state 62
	'int'          shift, and enter state 10
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'return'       shift, and enter state 65
	'string'       shift, and enter state 11
	'true'         shift, and enter state 66
	'void'         shift, and enter state 12
	'while'        shift, and enter state 67
	'{'            shift, and enter state 39
	'}'            reduce using rule 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 68
	L_quoted       shift, and enter state 69

	Ident          goto state 40
	Integer        goto state 41
	String         goto state 42
	Block          goto state 43
	Stmt           goto state 44
	ListStmt       goto state 45
	Type           goto state 46
	Expr8          goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 55

State 40

	Type -> Ident .                                     (rule 45)
	Expr8 -> Ident .                                    (rule 49)
	Expr8 -> Ident . '(' ListExpr ')'                   (rule 50)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	'('            shift, and enter state 114
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	'++'           reduce using rule 49
	'-'            reduce using rule 49
	'--'           reduce using rule 49
	'.'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'='            reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'['            reduce using rule 49
	'[]'           reduce using rule 45
	'||'           reduce using rule 49
	L_Ident        reduce using rule 45


State 41

	Expr6 -> Integer .                                  (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	'++'           reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'--'           reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'='            reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	']'            reduce using rule 55
	'||'           reduce using rule 55


State 42

	Expr6 -> String .                                   (rule 59)

	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&&'           reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	'++'           reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'--'           reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'='            reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	']'            reduce using rule 59
	'||'           reduce using rule 59


State 43

	Stmt -> Block .                                     (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'boolean'      reduce using rule 26
	'else'         reduce using rule 26
	'false'        reduce using rule 26
	'for'          reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'new'          reduce using rule 26
	'null'         reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 44

	ListStmt -> Stmt . ListStmt                         (rule 39)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	';'            shift, and enter state 59
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 60
	'for'          shift, and enter state 61
	'if'           shift, and enter state 62
	'int'          shift, and enter state 10
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'return'       shift, and enter state 65
	'string'       shift, and enter state 11
	'true'         shift, and enter state 66
	'void'         shift, and enter state 12
	'while'        shift, and enter state 67
	'{'            shift, and enter state 39
	'}'            reduce using rule 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 68
	L_quoted       shift, and enter state 69

	Ident          goto state 40
	Integer        goto state 41
	String         goto state 42
	Block          goto state 43
	Stmt           goto state 44
	ListStmt       goto state 113
	Type           goto state 46
	Expr8          goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 55

State 45

	Block -> '{' ListStmt . '}'                         (rule 24)

	'}'            shift, and enter state 112


State 46

	Stmt -> Type . ListItem ';'                         (rule 28)
	Type -> Type . '[]'                                 (rule 44)

	'[]'           shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 77
	Item           goto state 33
	ListItem       goto state 111

State 47

	Expr8 -> Expr8 . '[' Expr ']'                       (rule 51)
	Expr7 -> Expr8 .                                    (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	'++'           reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'--'           reduce using rule 54
	'.'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'='            reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'['            shift, and enter state 110
	']'            reduce using rule 54
	'||'           reduce using rule 54


State 48

	Expr7 -> Expr7 . '.' Expr8                          (rule 53)
	Expr6 -> Expr7 .                                    (rule 63)

	'!='           reduce using rule 63
	'%'            reduce using rule 63
	'&&'           reduce using rule 63
	')'            reduce using rule 63
	'*'            reduce using rule 63
	'+'            reduce using rule 63
	'++'           reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'--'           reduce using rule 63
	'.'            shift, and enter state 109
	'/'            reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'='            reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	']'            reduce using rule 63
	'||'           reduce using rule 63


State 49

	Expr5 -> Expr6 .                                    (rule 66)

	'!='           reduce using rule 66
	'%'            reduce using rule 66
	'&&'           reduce using rule 66
	')'            reduce using rule 66
	'*'            reduce using rule 66
	'+'            reduce using rule 66
	'++'           reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	'--'           reduce using rule 66
	'/'            reduce using rule 66
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'='            reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	']'            reduce using rule 66
	'||'           reduce using rule 66


State 50

	Expr4 -> Expr5 .                                    (rule 68)

	'!='           reduce using rule 68
	'%'            reduce using rule 68
	'&&'           reduce using rule 68
	')'            reduce using rule 68
	'*'            reduce using rule 68
	'+'            reduce using rule 68
	'++'           reduce using rule 68
	','            reduce using rule 68
	'-'            reduce using rule 68
	'--'           reduce using rule 68
	'/'            reduce using rule 68
	';'            reduce using rule 68
	'<'            reduce using rule 68
	'<='           reduce using rule 68
	'='            reduce using rule 68
	'=='           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	']'            reduce using rule 68
	'||'           reduce using rule 68


State 51

	Expr4 -> Expr4 . MulOp Expr5                        (rule 67)
	Expr3 -> Expr4 .                                    (rule 70)

	'!='           reduce using rule 70
	'%'            shift, and enter state 106
	'&&'           reduce using rule 70
	')'            reduce using rule 70
	'*'            shift, and enter state 107
	'+'            reduce using rule 70
	'++'           reduce using rule 70
	','            reduce using rule 70
	'-'            reduce using rule 70
	'--'           reduce using rule 70
	'/'            shift, and enter state 108
	';'            reduce using rule 70
	'<'            reduce using rule 70
	'<='           reduce using rule 70
	'='            reduce using rule 70
	'=='           reduce using rule 70
	'>'            reduce using rule 70
	'>='           reduce using rule 70
	']'            reduce using rule 70
	'||'           reduce using rule 70

	MulOp          goto state 105

State 52

	Expr3 -> Expr3 . AddOp Expr4                        (rule 69)
	Expr2 -> Expr3 .                                    (rule 72)

	'!='           reduce using rule 72
	'&&'           reduce using rule 72
	')'            reduce using rule 72
	'+'            shift, and enter state 103
	'++'           reduce using rule 72
	','            reduce using rule 72
	'-'            shift, and enter state 104
	'--'           reduce using rule 72
	';'            reduce using rule 72
	'<'            reduce using rule 72
	'<='           reduce using rule 72
	'='            reduce using rule 72
	'=='           reduce using rule 72
	'>'            reduce using rule 72
	'>='           reduce using rule 72
	']'            reduce using rule 72
	'||'           reduce using rule 72

	AddOp          goto state 102

State 53

	Expr2 -> Expr2 . RelOp Expr3                        (rule 71)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 73)
	Expr1 -> Expr2 .                                    (rule 74)

	'!='           shift, and enter state 95
	'&&'           shift, and enter state 96
	')'            reduce using rule 74
	'++'           reduce using rule 74
	','            reduce using rule 74
	'--'           reduce using rule 74
	';'            reduce using rule 74
	'<'            shift, and enter state 97
	'<='           shift, and enter state 98
	'='            reduce using rule 74
	'=='           shift, and enter state 99
	'>'            shift, and enter state 100
	'>='           shift, and enter state 101
	']'            reduce using rule 74
	'||'           reduce using rule 74

	RelOp          goto state 94

State 54

	Expr -> Expr1 . '||' Expr                           (rule 75)
	Expr -> Expr1 .                                     (rule 76)

	')'            reduce using rule 76
	'++'           reduce using rule 76
	','            reduce using rule 76
	'--'           reduce using rule 76
	';'            reduce using rule 76
	'='            reduce using rule 76
	']'            reduce using rule 76
	'||'           shift, and enter state 93


State 55

	Stmt -> Expr . ';'                                  (rule 27)
	Stmt -> Expr . '=' Expr ';'                         (rule 29)
	Stmt -> Expr . '++' ';'                             (rule 30)
	Stmt -> Expr . '--' ';'                             (rule 31)

	'++'           shift, and enter state 89
	'--'           shift, and enter state 90
	';'            shift, and enter state 91
	'='            shift, and enter state 92


State 56

	Expr5 -> '!' . Expr6                                (rule 65)

	'('            shift, and enter state 57
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'true'         shift, and enter state 66
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 68
	L_quoted       shift, and enter state 69

	Ident          goto state 74
	Integer        goto state 41
	String         goto state 42
	Expr8          goto state 47
	Expr7          goto state 48
	Expr6          goto state 88

State 57

	Expr8 -> '(' . Expr ')'                             (rule 52)
	Expr6 -> '(' . Expr ')' Expr6                       (rule 60)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'true'         shift, and enter state 66
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 68
	L_quoted       shift, and enter state 69

	Ident          goto state 74
	Integer        goto state 41
	String         goto state 42
	Expr8          goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 87

State 58

	Expr5 -> '-' . Expr6                                (rule 64)

	'('            shift, and enter state 57
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'true'         shift, and enter state 66
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 68
	L_quoted       shift, and enter state 69

	Ident          goto state 74
	Integer        goto state 41
	String         goto state 42
	Expr8          goto state 47
	Expr7          goto state 48
	Expr6          goto state 86

State 59

	Stmt -> ';' .                                       (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'boolean'      reduce using rule 25
	'else'         reduce using rule 25
	'false'        reduce using rule 25
	'for'          reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'new'          reduce using rule 25
	'null'         reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 60

	Expr6 -> 'false' .                                  (rule 57)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	'++'           reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'--'           reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'='            reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	']'            reduce using rule 57
	'||'           reduce using rule 57


State 61

	Stmt -> 'for' . '(' Type Ident ':' Expr ')' Stmt    (rule 35)

	'('            shift, and enter state 85


State 62

	Stmt -> 'if' . '(' Expr ')' Stmt 'else' Stmt        (rule 36)
	Stmt -> 'if' . '(' Expr ')' Stmt                    (rule 37)

	'('            shift, and enter state 84


State 63

	Expr6 -> 'new' . Type '[' Expr ']'                  (rule 61)
	Expr6 -> 'new' . Ident                              (rule 62)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 82
	Type           goto state 83

State 64

	Expr6 -> 'null' .                                   (rule 58)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	'++'           reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'--'           reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'='            reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	']'            reduce using rule 58
	'||'           reduce using rule 58


State 65

	Stmt -> 'return' . Expr ';'                         (rule 32)
	Stmt -> 'return' . ';'                              (rule 33)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	';'            shift, and enter state 81
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'true'         shift, and enter state 66
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 68
	L_quoted       shift, and enter state 69

	Ident          goto state 74
	Integer        goto state 41
	String         goto state 42
	Expr8          goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 80

State 66

	Expr6 -> 'true' .                                   (rule 56)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	'++'           reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'--'           reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'='            reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	']'            reduce using rule 56
	'||'           reduce using rule 56


State 67

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 34)

	'('            shift, and enter state 79


State 68

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	'++'           reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'--'           reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'='            reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	']'            reduce using rule 2
	'||'           reduce using rule 2


State 69

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	'++'           reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'--'           reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'='            reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	']'            reduce using rule 3
	'||'           reduce using rule 3


State 70

	Feature -> Type ListItem ';' .                      (rule 15)

	';'            reduce using rule 15
	'boolean'      reduce using rule 15
	'int'          reduce using rule 15
	'string'       reduce using rule 15
	'void'         reduce using rule 15
	'}'            reduce using rule 15
	L_Ident        reduce using rule 15


State 71

	ListItem -> Item ',' . ListItem                     (rule 23)

	L_Ident        shift, and enter state 2

	Ident          goto state 77
	Item           goto state 33
	ListItem       goto state 78

State 72

	Feature -> Type Ident '(' . ListArg ')' Block       (rule 16)

	')'            reduce using rule 10
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 22
	ListArg        goto state 76
	Type           goto state 24

State 73

	Item -> Ident '=' . Expr                            (rule 21)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'true'         shift, and enter state 66
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 68
	L_quoted       shift, and enter state 69

	Ident          goto state 74
	Integer        goto state 41
	String         goto state 42
	Expr8          goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 75

State 74

	Expr8 -> Ident .                                    (rule 49)
	Expr8 -> Ident . '(' ListExpr ')'                   (rule 50)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	'('            shift, and enter state 114
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	'++'           reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'--'           reduce using rule 49
	'.'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'='            reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'['            reduce using rule 49
	']'            reduce using rule 49
	'||'           reduce using rule 49


State 75

	Item -> Ident '=' Expr .                            (rule 21)

	','            reduce using rule 21
	';'            reduce using rule 21


State 76

	Feature -> Type Ident '(' ListArg . ')' Block       (rule 16)

	')'            shift, and enter state 135


State 77

	Item -> Ident .                                     (rule 20)
	Item -> Ident . '=' Expr                            (rule 21)

	','            reduce using rule 20
	';'            reduce using rule 20
	'='            shift, and enter state 73


State 78

	ListItem -> Item ',' ListItem .                     (rule 23)

	';'            reduce using rule 23


State 79

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 34)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'true'         shift, and enter state 66
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 68
	L_quoted       shift, and enter state 69

	Ident          goto state 74
	Integer        goto state 41
	String         goto state 42
	Expr8          goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 134

State 80

	Stmt -> 'return' Expr . ';'                         (rule 32)

	';'            shift, and enter state 133


State 81

	Stmt -> 'return' ';' .                              (rule 33)

	'!'            reduce using rule 33
	'('            reduce using rule 33
	'-'            reduce using rule 33
	';'            reduce using rule 33
	'boolean'      reduce using rule 33
	'else'         reduce using rule 33
	'false'        reduce using rule 33
	'for'          reduce using rule 33
	'if'           reduce using rule 33
	'int'          reduce using rule 33
	'new'          reduce using rule 33
	'null'         reduce using rule 33
	'return'       reduce using rule 33
	'string'       reduce using rule 33
	'true'         reduce using rule 33
	'void'         reduce using rule 33
	'while'        reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	L_Ident        reduce using rule 33
	L_integ        reduce using rule 33
	L_quoted       reduce using rule 33


State 82

	Type -> Ident .                                     (rule 45)
	Expr6 -> 'new' Ident .                              (rule 62)

	'!='           reduce using rule 62
	'%'            reduce using rule 62
	'&&'           reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'+'            reduce using rule 62
	'++'           reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'--'           reduce using rule 62
	'/'            reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'='            reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'['            reduce using rule 45
	'[]'           reduce using rule 45
	']'            reduce using rule 62
	'||'           reduce using rule 62


State 83

	Type -> Type . '[]'                                 (rule 44)
	Expr6 -> 'new' Type . '[' Expr ']'                  (rule 61)

	'['            shift, and enter state 132
	'[]'           shift, and enter state 15


State 84

	Stmt -> 'if' '(' . Expr ')' Stmt 'else' Stmt        (rule 36)
	Stmt -> 'if' '(' . Expr ')' Stmt                    (rule 37)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'true'         shift, and enter state 66
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 68
	L_quoted       shift, and enter state 69

	Ident          goto state 74
	Integer        goto state 41
	String         goto state 42
	Expr8          goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 131

State 85

	Stmt -> 'for' '(' . Type Ident ':' Expr ')' Stmt    (rule 35)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Type           goto state 130

State 86

	Expr5 -> '-' Expr6 .                                (rule 64)

	'!='           reduce using rule 64
	'%'            reduce using rule 64
	'&&'           reduce using rule 64
	')'            reduce using rule 64
	'*'            reduce using rule 64
	'+'            reduce using rule 64
	'++'           reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'--'           reduce using rule 64
	'/'            reduce using rule 64
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'='            reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	']'            reduce using rule 64
	'||'           reduce using rule 64


State 87

	Expr8 -> '(' Expr . ')'                             (rule 52)
	Expr6 -> '(' Expr . ')' Expr6                       (rule 60)

	')'            shift, and enter state 129


State 88

	Expr5 -> '!' Expr6 .                                (rule 65)

	'!='           reduce using rule 65
	'%'            reduce using rule 65
	'&&'           reduce using rule 65
	')'            reduce using rule 65
	'*'            reduce using rule 65
	'+'            reduce using rule 65
	'++'           reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	'--'           reduce using rule 65
	'/'            reduce using rule 65
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'='            reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	']'            reduce using rule 65
	'||'           reduce using rule 65


State 89

	Stmt -> Expr '++' . ';'                             (rule 30)

	';'            shift, and enter state 128


State 90

	Stmt -> Expr '--' . ';'                             (rule 31)

	';'            shift, and enter state 127


State 91

	Stmt -> Expr ';' .                                  (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'boolean'      reduce using rule 27
	'else'         reduce using rule 27
	'false'        reduce using rule 27
	'for'          reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'new'          reduce using rule 27
	'null'         reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 92

	Stmt -> Expr '=' . Expr ';'                         (rule 29)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'true'         shift, and enter state 66
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 68
	L_quoted       shift, and enter state 69

	Ident          goto state 74
	Integer        goto state 41
	String         goto state 42
	Expr8          goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 126

State 93

	Expr -> Expr1 '||' . Expr                           (rule 75)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'true'         shift, and enter state 66
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 68
	L_quoted       shift, and enter state 69

	Ident          goto state 74
	Integer        goto state 41
	String         goto state 42
	Expr8          goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 125

State 94

	Expr2 -> Expr2 RelOp . Expr3                        (rule 71)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'true'         shift, and enter state 66
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 68
	L_quoted       shift, and enter state 69

	Ident          goto state 74
	Integer        goto state 41
	String         goto state 42
	Expr8          goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 124

State 95

	RelOp -> '!=' .                                     (rule 90)

	'!'            reduce using rule 90
	'('            reduce using rule 90
	'-'            reduce using rule 90
	'false'        reduce using rule 90
	'new'          reduce using rule 90
	'null'         reduce using rule 90
	'true'         reduce using rule 90
	L_Ident        reduce using rule 90
	L_integ        reduce using rule 90
	L_quoted       reduce using rule 90


State 96

	Expr1 -> Expr2 '&&' . Expr1                         (rule 73)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'true'         shift, and enter state 66
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 68
	L_quoted       shift, and enter state 69

	Ident          goto state 74
	Integer        goto state 41
	String         goto state 42
	Expr8          goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 123

State 97

	RelOp -> '<' .                                      (rule 85)

	'!'            reduce using rule 85
	'('            reduce using rule 85
	'-'            reduce using rule 85
	'false'        reduce using rule 85
	'new'          reduce using rule 85
	'null'         reduce using rule 85
	'true'         reduce using rule 85
	L_Ident        reduce using rule 85
	L_integ        reduce using rule 85
	L_quoted       reduce using rule 85


State 98

	RelOp -> '<=' .                                     (rule 86)

	'!'            reduce using rule 86
	'('            reduce using rule 86
	'-'            reduce using rule 86
	'false'        reduce using rule 86
	'new'          reduce using rule 86
	'null'         reduce using rule 86
	'true'         reduce using rule 86
	L_Ident        reduce using rule 86
	L_integ        reduce using rule 86
	L_quoted       reduce using rule 86


State 99

	RelOp -> '==' .                                     (rule 89)

	'!'            reduce using rule 89
	'('            reduce using rule 89
	'-'            reduce using rule 89
	'false'        reduce using rule 89
	'new'          reduce using rule 89
	'null'         reduce using rule 89
	'true'         reduce using rule 89
	L_Ident        reduce using rule 89
	L_integ        reduce using rule 89
	L_quoted       reduce using rule 89


State 100

	RelOp -> '>' .                                      (rule 87)

	'!'            reduce using rule 87
	'('            reduce using rule 87
	'-'            reduce using rule 87
	'false'        reduce using rule 87
	'new'          reduce using rule 87
	'null'         reduce using rule 87
	'true'         reduce using rule 87
	L_Ident        reduce using rule 87
	L_integ        reduce using rule 87
	L_quoted       reduce using rule 87


State 101

	RelOp -> '>=' .                                     (rule 88)

	'!'            reduce using rule 88
	'('            reduce using rule 88
	'-'            reduce using rule 88
	'false'        reduce using rule 88
	'new'          reduce using rule 88
	'null'         reduce using rule 88
	'true'         reduce using rule 88
	L_Ident        reduce using rule 88
	L_integ        reduce using rule 88
	L_quoted       reduce using rule 88


State 102

	Expr3 -> Expr3 AddOp . Expr4                        (rule 69)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'true'         shift, and enter state 66
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 68
	L_quoted       shift, and enter state 69

	Ident          goto state 74
	Integer        goto state 41
	String         goto state 42
	Expr8          goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 122

State 103

	AddOp -> '+' .                                      (rule 80)

	'!'            reduce using rule 80
	'('            reduce using rule 80
	'-'            reduce using rule 80
	'false'        reduce using rule 80
	'new'          reduce using rule 80
	'null'         reduce using rule 80
	'true'         reduce using rule 80
	L_Ident        reduce using rule 80
	L_integ        reduce using rule 80
	L_quoted       reduce using rule 80


State 104

	AddOp -> '-' .                                      (rule 81)

	'!'            reduce using rule 81
	'('            reduce using rule 81
	'-'            reduce using rule 81
	'false'        reduce using rule 81
	'new'          reduce using rule 81
	'null'         reduce using rule 81
	'true'         reduce using rule 81
	L_Ident        reduce using rule 81
	L_integ        reduce using rule 81
	L_quoted       reduce using rule 81


State 105

	Expr4 -> Expr4 MulOp . Expr5                        (rule 67)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'true'         shift, and enter state 66
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 68
	L_quoted       shift, and enter state 69

	Ident          goto state 74
	Integer        goto state 41
	String         goto state 42
	Expr8          goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 121

State 106

	MulOp -> '%' .                                      (rule 84)

	'!'            reduce using rule 84
	'('            reduce using rule 84
	'-'            reduce using rule 84
	'false'        reduce using rule 84
	'new'          reduce using rule 84
	'null'         reduce using rule 84
	'true'         reduce using rule 84
	L_Ident        reduce using rule 84
	L_integ        reduce using rule 84
	L_quoted       reduce using rule 84


State 107

	MulOp -> '*' .                                      (rule 82)

	'!'            reduce using rule 82
	'('            reduce using rule 82
	'-'            reduce using rule 82
	'false'        reduce using rule 82
	'new'          reduce using rule 82
	'null'         reduce using rule 82
	'true'         reduce using rule 82
	L_Ident        reduce using rule 82
	L_integ        reduce using rule 82
	L_quoted       reduce using rule 82


State 108

	MulOp -> '/' .                                      (rule 83)

	'!'            reduce using rule 83
	'('            reduce using rule 83
	'-'            reduce using rule 83
	'false'        reduce using rule 83
	'new'          reduce using rule 83
	'null'         reduce using rule 83
	'true'         reduce using rule 83
	L_Ident        reduce using rule 83
	L_integ        reduce using rule 83
	L_quoted       reduce using rule 83


State 109

	Expr7 -> Expr7 '.' . Expr8                          (rule 53)

	'('            shift, and enter state 120
	L_Ident        shift, and enter state 2

	Ident          goto state 74
	Expr8          goto state 119

State 110

	Expr8 -> Expr8 '[' . Expr ']'                       (rule 51)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'true'         shift, and enter state 66
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 68
	L_quoted       shift, and enter state 69

	Ident          goto state 74
	Integer        goto state 41
	String         goto state 42
	Expr8          goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 118

State 111

	Stmt -> Type ListItem . ';'                         (rule 28)

	';'            shift, and enter state 117


State 112

	Block -> '{' ListStmt '}' .                         (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'boolean'      reduce using rule 24
	'class'        reduce using rule 24
	'else'         reduce using rule 24
	'false'        reduce using rule 24
	'for'          reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'new'          reduce using rule 24
	'null'         reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24
	%eof           reduce using rule 24


State 113

	ListStmt -> Stmt ListStmt .                         (rule 39)

	'}'            reduce using rule 39


State 114

	Expr8 -> Ident '(' . ListExpr ')'                   (rule 50)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	')'            reduce using rule 77
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'true'         shift, and enter state 66
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 68
	L_quoted       shift, and enter state 69

	Ident          goto state 74
	Integer        goto state 41
	String         goto state 42
	Expr8          goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 115
	ListExpr       goto state 116

State 115

	ListExpr -> Expr .                                  (rule 78)
	ListExpr -> Expr . ',' ListExpr                     (rule 79)

	')'            reduce using rule 78
	','            shift, and enter state 146


State 116

	Expr8 -> Ident '(' ListExpr . ')'                   (rule 50)

	')'            shift, and enter state 145


State 117

	Stmt -> Type ListItem ';' .                         (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'boolean'      reduce using rule 28
	'else'         reduce using rule 28
	'false'        reduce using rule 28
	'for'          reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'new'          reduce using rule 28
	'null'         reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'true'         reduce using rule 28
	'void'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 118

	Expr8 -> Expr8 '[' Expr . ']'                       (rule 51)

	']'            shift, and enter state 144


State 119

	Expr8 -> Expr8 . '[' Expr ']'                       (rule 51)
	Expr7 -> Expr7 '.' Expr8 .                          (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	'++'           reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'--'           reduce using rule 53
	'.'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'='            reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'['            shift, and enter state 110
	']'            reduce using rule 53
	'||'           reduce using rule 53


State 120

	Expr8 -> '(' . Expr ')'                             (rule 52)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'true'         shift, and enter state 66
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 68
	L_quoted       shift, and enter state 69

	Ident          goto state 74
	Integer        goto state 41
	String         goto state 42
	Expr8          goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 143

State 121

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 67)

	'!='           reduce using rule 67
	'%'            reduce using rule 67
	'&&'           reduce using rule 67
	')'            reduce using rule 67
	'*'            reduce using rule 67
	'+'            reduce using rule 67
	'++'           reduce using rule 67
	','            reduce using rule 67
	'-'            reduce using rule 67
	'--'           reduce using rule 67
	'/'            reduce using rule 67
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'='            reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	']'            reduce using rule 67
	'||'           reduce using rule 67


State 122

	Expr4 -> Expr4 . MulOp Expr5                        (rule 67)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 69)

	'!='           reduce using rule 69
	'%'            shift, and enter state 106
	'&&'           reduce using rule 69
	')'            reduce using rule 69
	'*'            shift, and enter state 107
	'+'            reduce using rule 69
	'++'           reduce using rule 69
	','            reduce using rule 69
	'-'            reduce using rule 69
	'--'           reduce using rule 69
	'/'            shift, and enter state 108
	';'            reduce using rule 69
	'<'            reduce using rule 69
	'<='           reduce using rule 69
	'='            reduce using rule 69
	'=='           reduce using rule 69
	'>'            reduce using rule 69
	'>='           reduce using rule 69
	']'            reduce using rule 69
	'||'           reduce using rule 69

	MulOp          goto state 105

State 123

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 73)

	')'            reduce using rule 73
	'++'           reduce using rule 73
	','            reduce using rule 73
	'--'           reduce using rule 73
	';'            reduce using rule 73
	'='            reduce using rule 73
	']'            reduce using rule 73
	'||'           reduce using rule 73


State 124

	Expr3 -> Expr3 . AddOp Expr4                        (rule 69)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 71)

	'!='           reduce using rule 71
	'&&'           reduce using rule 71
	')'            reduce using rule 71
	'+'            shift, and enter state 103
	'++'           reduce using rule 71
	','            reduce using rule 71
	'-'            shift, and enter state 104
	'--'           reduce using rule 71
	';'            reduce using rule 71
	'<'            reduce using rule 71
	'<='           reduce using rule 71
	'='            reduce using rule 71
	'=='           reduce using rule 71
	'>'            reduce using rule 71
	'>='           reduce using rule 71
	']'            reduce using rule 71
	'||'           reduce using rule 71

	AddOp          goto state 102

State 125

	Expr -> Expr1 '||' Expr .                           (rule 75)

	')'            reduce using rule 75
	'++'           reduce using rule 75
	','            reduce using rule 75
	'--'           reduce using rule 75
	';'            reduce using rule 75
	'='            reduce using rule 75
	']'            reduce using rule 75


State 126

	Stmt -> Expr '=' Expr . ';'                         (rule 29)

	';'            shift, and enter state 142


State 127

	Stmt -> Expr '--' ';' .                             (rule 31)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'boolean'      reduce using rule 31
	'else'         reduce using rule 31
	'false'        reduce using rule 31
	'for'          reduce using rule 31
	'if'           reduce using rule 31
	'int'          reduce using rule 31
	'new'          reduce using rule 31
	'null'         reduce using rule 31
	'return'       reduce using rule 31
	'string'       reduce using rule 31
	'true'         reduce using rule 31
	'void'         reduce using rule 31
	'while'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_Ident        reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31


State 128

	Stmt -> Expr '++' ';' .                             (rule 30)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'boolean'      reduce using rule 30
	'else'         reduce using rule 30
	'false'        reduce using rule 30
	'for'          reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'new'          reduce using rule 30
	'null'         reduce using rule 30
	'return'       reduce using rule 30
	'string'       reduce using rule 30
	'true'         reduce using rule 30
	'void'         reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_Ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


State 129

	Expr8 -> '(' Expr ')' .                             (rule 52)
	Expr6 -> '(' Expr ')' . Expr6                       (rule 60)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	'('            shift, and enter state 57
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	'++'           reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'--'           reduce using rule 52
	'.'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'='            reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'['            reduce using rule 52
	']'            reduce using rule 52
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'true'         shift, and enter state 66
	'||'           reduce using rule 52
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 68
	L_quoted       shift, and enter state 69

	Ident          goto state 74
	Integer        goto state 41
	String         goto state 42
	Expr8          goto state 47
	Expr7          goto state 48
	Expr6          goto state 141

State 130

	Stmt -> 'for' '(' Type . Ident ':' Expr ')' Stmt    (rule 35)
	Type -> Type . '[]'                                 (rule 44)

	'[]'           shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 140

State 131

	Stmt -> 'if' '(' Expr . ')' Stmt 'else' Stmt        (rule 36)
	Stmt -> 'if' '(' Expr . ')' Stmt                    (rule 37)

	')'            shift, and enter state 139


State 132

	Expr6 -> 'new' Type '[' . Expr ']'                  (rule 61)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'true'         shift, and enter state 66
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 68
	L_quoted       shift, and enter state 69

	Ident          goto state 74
	Integer        goto state 41
	String         goto state 42
	Expr8          goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 138

State 133

	Stmt -> 'return' Expr ';' .                         (rule 32)

	'!'            reduce using rule 32
	'('            reduce using rule 32
	'-'            reduce using rule 32
	';'            reduce using rule 32
	'boolean'      reduce using rule 32
	'else'         reduce using rule 32
	'false'        reduce using rule 32
	'for'          reduce using rule 32
	'if'           reduce using rule 32
	'int'          reduce using rule 32
	'new'          reduce using rule 32
	'null'         reduce using rule 32
	'return'       reduce using rule 32
	'string'       reduce using rule 32
	'true'         reduce using rule 32
	'void'         reduce using rule 32
	'while'        reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	L_Ident        reduce using rule 32
	L_integ        reduce using rule 32
	L_quoted       reduce using rule 32


State 134

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 34)

	')'            shift, and enter state 137


State 135

	Feature -> Type Ident '(' ListArg ')' . Block       (rule 16)

	'{'            shift, and enter state 39

	Block          goto state 136

State 136

	Feature -> Type Ident '(' ListArg ')' Block .       (rule 16)

	';'            reduce using rule 16
	'boolean'      reduce using rule 16
	'int'          reduce using rule 16
	'string'       reduce using rule 16
	'void'         reduce using rule 16
	'}'            reduce using rule 16
	L_Ident        reduce using rule 16


State 137

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 34)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	';'            shift, and enter state 59
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 60
	'for'          shift, and enter state 61
	'if'           shift, and enter state 62
	'int'          shift, and enter state 10
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'return'       shift, and enter state 65
	'string'       shift, and enter state 11
	'true'         shift, and enter state 66
	'void'         shift, and enter state 12
	'while'        shift, and enter state 67
	'{'            shift, and enter state 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 68
	L_quoted       shift, and enter state 69

	Ident          goto state 40
	Integer        goto state 41
	String         goto state 42
	Block          goto state 43
	Stmt           goto state 152
	Type           goto state 46
	Expr8          goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 55

State 138

	Expr6 -> 'new' Type '[' Expr . ']'                  (rule 61)

	']'            shift, and enter state 151


State 139

	Stmt -> 'if' '(' Expr ')' . Stmt 'else' Stmt        (rule 36)
	Stmt -> 'if' '(' Expr ')' . Stmt                    (rule 37)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	';'            shift, and enter state 59
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 60
	'for'          shift, and enter state 61
	'if'           shift, and enter state 62
	'int'          shift, and enter state 10
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'return'       shift, and enter state 65
	'string'       shift, and enter state 11
	'true'         shift, and enter state 66
	'void'         shift, and enter state 12
	'while'        shift, and enter state 67
	'{'            shift, and enter state 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 68
	L_quoted       shift, and enter state 69

	Ident          goto state 40
	Integer        goto state 41
	String         goto state 42
	Block          goto state 43
	Stmt           goto state 150
	Type           goto state 46
	Expr8          goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 55

State 140

	Stmt -> 'for' '(' Type Ident . ':' Expr ')' Stmt    (rule 35)

	':'            shift, and enter state 149


State 141

	Expr6 -> '(' Expr ')' Expr6 .                       (rule 60)

	'!='           reduce using rule 60
	'%'            reduce using rule 60
	'&&'           reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	'++'           reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'--'           reduce using rule 60
	'/'            reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'='            reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	']'            reduce using rule 60
	'||'           reduce using rule 60


State 142

	Stmt -> Expr '=' Expr ';' .                         (rule 29)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'boolean'      reduce using rule 29
	'else'         reduce using rule 29
	'false'        reduce using rule 29
	'for'          reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'new'          reduce using rule 29
	'null'         reduce using rule 29
	'return'       reduce using rule 29
	'string'       reduce using rule 29
	'true'         reduce using rule 29
	'void'         reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_Ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 143

	Expr8 -> '(' Expr . ')'                             (rule 52)

	')'            shift, and enter state 148


State 144

	Expr8 -> Expr8 '[' Expr ']' .                       (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	'++'           reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'--'           reduce using rule 51
	'.'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'='            reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'['            reduce using rule 51
	']'            reduce using rule 51
	'||'           reduce using rule 51


State 145

	Expr8 -> Ident '(' ListExpr ')' .                   (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	'++'           reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'--'           reduce using rule 50
	'.'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'='            reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'['            reduce using rule 50
	']'            reduce using rule 50
	'||'           reduce using rule 50


State 146

	ListExpr -> Expr ',' . ListExpr                     (rule 79)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	')'            reduce using rule 77
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'true'         shift, and enter state 66
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 68
	L_quoted       shift, and enter state 69

	Ident          goto state 74
	Integer        goto state 41
	String         goto state 42
	Expr8          goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 115
	ListExpr       goto state 147

State 147

	ListExpr -> Expr ',' ListExpr .                     (rule 79)

	')'            reduce using rule 79


State 148

	Expr8 -> '(' Expr ')' .                             (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	'++'           reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'--'           reduce using rule 52
	'.'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'='            reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'['            reduce using rule 52
	']'            reduce using rule 52
	'||'           reduce using rule 52


State 149

	Stmt -> 'for' '(' Type Ident ':' . Expr ')' Stmt    (rule 35)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'true'         shift, and enter state 66
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 68
	L_quoted       shift, and enter state 69

	Ident          goto state 74
	Integer        goto state 41
	String         goto state 42
	Expr8          goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 154

State 150

	Stmt -> 'if' '(' Expr ')' Stmt . 'else' Stmt        (rule 36)
	Stmt -> 'if' '(' Expr ')' Stmt .                    (rule 37)

	'!'            reduce using rule 37
	'('            reduce using rule 37
	'-'            reduce using rule 37
	';'            reduce using rule 37
	'boolean'      reduce using rule 37
	'else'         shift, and enter state 153
			(reduce using rule 37)

	'false'        reduce using rule 37
	'for'          reduce using rule 37
	'if'           reduce using rule 37
	'int'          reduce using rule 37
	'new'          reduce using rule 37
	'null'         reduce using rule 37
	'return'       reduce using rule 37
	'string'       reduce using rule 37
	'true'         reduce using rule 37
	'void'         reduce using rule 37
	'while'        reduce using rule 37
	'{'            reduce using rule 37
	'}'            reduce using rule 37
	L_Ident        reduce using rule 37
	L_integ        reduce using rule 37
	L_quoted       reduce using rule 37


State 151

	Expr6 -> 'new' Type '[' Expr ']' .                  (rule 61)

	'!='           reduce using rule 61
	'%'            reduce using rule 61
	'&&'           reduce using rule 61
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'+'            reduce using rule 61
	'++'           reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'--'           reduce using rule 61
	'/'            reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'='            reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	']'            reduce using rule 61
	'||'           reduce using rule 61


State 152

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 34)

	'!'            reduce using rule 34
	'('            reduce using rule 34
	'-'            reduce using rule 34
	';'            reduce using rule 34
	'boolean'      reduce using rule 34
	'else'         reduce using rule 34
	'false'        reduce using rule 34
	'for'          reduce using rule 34
	'if'           reduce using rule 34
	'int'          reduce using rule 34
	'new'          reduce using rule 34
	'null'         reduce using rule 34
	'return'       reduce using rule 34
	'string'       reduce using rule 34
	'true'         reduce using rule 34
	'void'         reduce using rule 34
	'while'        reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	L_Ident        reduce using rule 34
	L_integ        reduce using rule 34
	L_quoted       reduce using rule 34


State 153

	Stmt -> 'if' '(' Expr ')' Stmt 'else' . Stmt        (rule 36)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	';'            shift, and enter state 59
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 60
	'for'          shift, and enter state 61
	'if'           shift, and enter state 62
	'int'          shift, and enter state 10
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'return'       shift, and enter state 65
	'string'       shift, and enter state 11
	'true'         shift, and enter state 66
	'void'         shift, and enter state 12
	'while'        shift, and enter state 67
	'{'            shift, and enter state 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 68
	L_quoted       shift, and enter state 69

	Ident          goto state 40
	Integer        goto state 41
	String         goto state 42
	Block          goto state 43
	Stmt           goto state 156
	Type           goto state 46
	Expr8          goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 55

State 154

	Stmt -> 'for' '(' Type Ident ':' Expr . ')' Stmt    (rule 35)

	')'            shift, and enter state 155


State 155

	Stmt -> 'for' '(' Type Ident ':' Expr ')' . Stmt    (rule 35)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	';'            shift, and enter state 59
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 60
	'for'          shift, and enter state 61
	'if'           shift, and enter state 62
	'int'          shift, and enter state 10
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'return'       shift, and enter state 65
	'string'       shift, and enter state 11
	'true'         shift, and enter state 66
	'void'         shift, and enter state 12
	'while'        shift, and enter state 67
	'{'            shift, and enter state 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 68
	L_quoted       shift, and enter state 69

	Ident          goto state 40
	Integer        goto state 41
	String         goto state 42
	Block          goto state 43
	Stmt           goto state 157
	Type           goto state 46
	Expr8          goto state 47
	Expr7          goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 55

State 156

	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt .        (rule 36)

	'!'            reduce using rule 36
	'('            reduce using rule 36
	'-'            reduce using rule 36
	';'            reduce using rule 36
	'boolean'      reduce using rule 36
	'else'         reduce using rule 36
	'false'        reduce using rule 36
	'for'          reduce using rule 36
	'if'           reduce using rule 36
	'int'          reduce using rule 36
	'new'          reduce using rule 36
	'null'         reduce using rule 36
	'return'       reduce using rule 36
	'string'       reduce using rule 36
	'true'         reduce using rule 36
	'void'         reduce using rule 36
	'while'        reduce using rule 36
	'{'            reduce using rule 36
	'}'            reduce using rule 36
	L_Ident        reduce using rule 36
	L_integ        reduce using rule 36
	L_quoted       reduce using rule 36


State 157

	Stmt -> 'for' '(' Type Ident ':' Expr ')' Stmt .    (rule 35)

	'!'            reduce using rule 35
	'('            reduce using rule 35
	'-'            reduce using rule 35
	';'            reduce using rule 35
	'boolean'      reduce using rule 35
	'else'         reduce using rule 35
	'false'        reduce using rule 35
	'for'          reduce using rule 35
	'if'           reduce using rule 35
	'int'          reduce using rule 35
	'new'          reduce using rule 35
	'null'         reduce using rule 35
	'return'       reduce using rule 35
	'string'       reduce using rule 35
	'true'         reduce using rule 35
	'void'         reduce using rule 35
	'while'        reduce using rule 35
	'{'            reduce using rule 35
	'}'            reduce using rule 35
	L_Ident        reduce using rule 35
	L_integ        reduce using rule 35
	L_quoted       reduce using rule 35


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 91
Number of terminals: 46
Number of non-terminals: 32
Number of states: 158
